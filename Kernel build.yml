name: Build Kernel (Proton-Clang)

on:
  workflow_dispatch:  # manual trigger from the Actions tab
  push:
    branches:
      - main

jobs:
  build:
    name: Compile Kernel
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      ARCH: arm64
      SUBARCH: arm64
      DEFCONFIG: stock_defconfig
      KERNEL_NAME: kernel_xiaomi_spes
      CLANG_URL: https://github.com/kdrag0n/proton-clang.git
      CLANG_BRANCH: master

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git make bc bison flex libssl-dev \
            gcc clang lld llvm libncurses-dev python3 ccache

      - name: Download Proton-Clang
        run: |
          git clone --depth=1 $CLANG_URL -b $CLANG_BRANCH clang

      - name: Set up environment
        run: |
          export PATH="${GITHUB_WORKSPACE}/clang/bin:$PATH"
          clang --version
          echo "Using defconfig: $DEFCONFIG"

      - name: Make defconfig
        run: |
          export PATH="${GITHUB_WORKSPACE}/clang/bin:$PATH"
          make O=out ARCH=${ARCH} $DEFCONFIG

      - name: Build kernel
        run: |
          export PATH="${GITHUB_WORKSPACE}/clang/bin:$PATH"
          make -j$(nproc) O=out \
            ARCH=${ARCH} \
            CC=clang \
            LLVM=1 \
            CLANG_TRIPLE=aarch64-linux-gnu- \
            CROSS_COMPILE=aarch64-linux-gnu- \
            CROSS_COMPILE_ARM32=arm-linux-gnueabi-

      - name: Collect build outputs
        run: |
          mkdir -p build-out
          cp -v out/arch/arm64/boot/Image* build-out/ || true
          cp -v out/arch/arm64/boot/dtb* build-out/ || true
          cp -v out/arch/arm64/boot/dts/*.dtb build-out/ || true
          ls -lh build-out

      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.KERNEL_NAME }}-build
          path: build-out/**
